name: Deploy FastAPI App to EC2

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - '.github/workflows/'
  workflow_dispatch:

env:
  SSH_USER: ${{ secrets.SSH_USER }}
  SSH_HOST: ${{ secrets.SSH_HOST }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY_URI: ${{ secrets.ECR_REPOSITORY_URI }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  MODEL_S3_URI: ${{ secrets.MODEL_S3_URI }}

jobs:
  ecr:
    name: Build and Push Image to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.ECR_REPOSITORY_URI }}:latest
          build-args: |
            MODEL_S3_URI=${{ env.MODEL_S3_URI }}
            AWS_ACCESS_KEY_ID=${{ env.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ env.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION=${{ env.AWS_REGION }}

  deploy:
    needs: ecr
    name: Deploy to EC2 Instance
    runs-on: ubuntu-latest
    steps:
      - name: SSH into EC2 and Deploy Docker
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            sudo apt-get update
            sudo apt-get install -y docker.io awscli
            aws configure set aws_access_key_id ${{ env.AWS_ACCESS_KEY_ID }}
            aws configure set aws_secret_access_key ${{ env.AWS_SECRET_ACCESS_KEY }}
            aws configure set region ${{ env.AWS_REGION }}
            aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}
            docker stop fastapi-app || true
            docker rm fastapi-app || true
            docker rmi -f ${{ env.ECR_REPOSITORY_URI }} || true
            docker pull ${{ env.ECR_REPOSITORY_URI }}:latest
            docker run -d --name fastapi-app -p 80:8000 ${{ env.ECR_REPOSITORY_URI}}:latest